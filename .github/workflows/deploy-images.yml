name: Create and publish Docker images

on: push

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}

jobs:
  validate:
    name: Format and Lint
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Pour pouvoir pousser des corrections automatiques
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        id: format_check
        run: npm run format:check || echo "format_needed=true" >> $GITHUB_OUTPUT

      - name: Apply formatting if needed
        if: steps.format_check.outputs.format_needed == 'true'
        run: npm run format

      - name: Fix lint issues
        run: npm run lint:fix

      - name: Commit format and lint changes if any
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add .
            git commit -m "style: auto-format and fix lint issues [skip ci]"
            git push
            echo "Changes were automatically formatted and pushed."
          else
            echo "No formatting changes needed."
          fi

      - name: Verify linting
        run: npm run lint

  build-and-push-images:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [api, thread, sender]
        include:
          - service: api
            context: ./api
          - service: thread
            context: ./thread
          - service: sender
            context: ./sender

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract commit short SHA
        id: sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Convert repository name to lowercase
        id: repo_name
        run: echo "REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.REPO_NAME }}/${{ matrix.service }}:latest
            ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.REPO_NAME }}/${{ matrix.service }}:${{ steps.sha.outputs.SHORT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max